service: mira-backend

provider:
  name: aws
  runtime: python3.12
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 1024
  timeout: 30
  environment:
    # Database
    DATABASE_URL: ${env:DATABASE_URL}

    # API Keys
    GEMINI_API_KEY: ${env:GEMINI_API_KEY, ''}

  iam:
    role:
      statements:
        # CloudWatch Logs
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: '*'
        # RDS permissions
        - Effect: Allow
          Action:
            - rds:DescribeDBInstances
            - rds:Connect
          Resource: '*'

functions:
  api:
    handler: lambda_handler.lambda_handler
    events:
      - httpApi:
          path: /{proxy+}
          method: '*'
      - httpApi:
          path: /
          method: '*'

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    fileName: requirements.txt
    dockerizePip: true
    slim: true
    strip: false
    noDeps: false

package:
  patterns:
    - '!.git/**'
    - '!.env*'
    - '!tests/**'
    - '!htmlcov/**'
    - '!coverage.xml'
    - '!pytest.ini'
    - '!Makefile'
    - '!docker/**'
    - '!mira.db'
    - '!venv/**'
    - '!__pycache__/**'
    - '!*.pyc'
    - '!.pytest_cache/**'
