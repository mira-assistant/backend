name: Mira Backend CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.11'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements_image.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_image.txt
          pip install flake8 pip-audit

      - name: Setup Test Database
        run: |
          # Create test database using Alembic
          alembic upgrade head

      - name: Run Flake8 (Linting)
        run: flake8 .
        continue-on-error: true

      # - name: Run Unit Tests
      #   run: |
      #     pytest app/tests/unit/ -v --cov=app --cov-report=xml --cov-report=term-missing

      # - name: Run Integration Tests
      #   run: |
      #     pytest app/tests/integration/ -v --cov=app --cov-report=xml --cov-report=term-missing

      # - name: Run All Tests with Coverage
      #   run: |
      #     pytest app/tests/ -v --cov=app --cov-report=xml --cov-report=html:htmlcov --cov-report=term-missing --cov-fail-under=80

      - name: Run Real Tests
        run: |
          pytest

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Dependency audit (ignore en-core-web-sm warning)
        run: |
          pip-audit 2>&1 | tee audit.txt || true
          # Fail if there are actual vulnerabilities (lines with a package, not just missing en-core-web-sm)
          if grep -q -v "en-core-web-sm" audit.txt | grep -q "Vulnerabilities"; then
            echo "pip-audit found real vulnerabilities!"
            exit 1
          fi
          exit 0

      - name: Start Backend
        run: |
          python -m uvicorn mira:app --host 0.0.0.0 --port 8000 &

      - name: Wait for Backend to be ready
        run: |
          for i in {1..30}; do
            if curl --silent --fail http://localhost:8000/; then
              echo "Backend successfully started"
              pkill -f uvicorn || true
              break
            fi
            echo "Waiting for backend to be ready..."
            sleep 2
          done