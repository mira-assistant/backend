name: AWS Continuous Deployment Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploying to AWS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build Docker image
        run: docker build -t mira-api:${{ github.sha }} -f docker/Dockerfile.lambda .

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag and push Docker image
        run: |
          docker tag mira-api:${{ github.sha }} 210291640622.dkr.ecr.us-east-1.amazonaws.com/mira-api:${{ github.sha }}
          docker push 210291640622.dkr.ecr.us-east-1.amazonaws.com/mira-api:${{ github.sha }}

      - name: Update Lambda function
        run: |
          aws lambda update-function-code \
            --function-name mira-backend-prod \
            --image-uri 210291640622.dkr.ecr.us-east-1.amazonaws.com/mira-api:${{ github.sha }}

          aws lambda update-function-configuration \
            --function-name mira-backend-prod \
            --handler main.handler

      - name: Wait for function to update
        run: |
          aws lambda wait function-updated \
            --region us-east-1 \
            --function-name mira-backend-prod

      - name: Run Alembic migrations via Lambda
        run: |
          aws lambda invoke \
            --region us-east-1 \
            --function-name mira-backend-prod \
            --payload '{}' \
            --log-type Tail \
            out.json > response.json

          LOG_RESULT=$(jq -r '.LogResult' response.json | base64 --decode)
          echo "---- Lambda Log Output ----"
          echo "$LOG_RESULT"

          echo "---- Lambda Payload ----"
          cat out.json